<Page
    x:Class="Lifethreadening.Views.SimulationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Lifethreadening.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:fa="using:FontAwesome.UWP"
    xmlns:customcontrols="using:Lifethreadening.Views.CustomControls"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <ResourceDictionary Source="../ResourceDictionaries/SimulationViewResources.xaml" />
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="320" />
        </Grid.ColumnDefinitions>
        <customcontrols:WorldView Grid.Column="0" World="{Binding Simulation.World}" />
        <Grid Grid.Column="1" Background="{StaticResource PrimaryBackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="14*" />
                <RowDefinition Height="6*" />
                <RowDefinition Height="10*" />
            </Grid.RowDefinitions>
            <StackPanel>
                <Button x:Name="GeneInspectorOpen" Click="GeneInspectorOpen_Click">🧬 Open gene inspector 🧬</Button>
            </StackPanel>
            <StackPanel Grid.Row="0">
                <StackPanel Style="{StaticResource SectionHeading}" Spacing="10">
                    <fa:FontAwesome Icon="InfoCircle" Foreground="{StaticResource SecondaryBrush}" />
                    <TextBlock Foreground="{StaticResource SecondaryBrush}" VerticalAlignment="Center" Style="{StaticResource SectionTitle}">Currently looking at</TextBlock>
                </StackPanel>

                <StackPanel Padding="20,20">
                    <Grid Visibility="{Binding HasSelectedAnimal, Converter={StaticResource InverseVisibilityConverter}}">
                        <TextBlock TextWrapping="WrapWholeWords">
                                No animal selected.
                                <LineBreak />
                                Select an animal within the simulation to view its details.
                        </TextBlock>
                    </Grid>
                    <StackPanel>
                        <!--Visibility="{Binding HasSelectedAnimal, Converter={StaticResource VisibilityConverter}}">-->
                        <StackPanel Margin="0,0,0,5">
                            <Grid Margin="0,0,0,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Style="{StaticResource Title}">Fox Harold</TextBlock>
                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Spacing="5">
                                    <TextBlock>Age: 13 years</TextBlock>
                                    <fa:FontAwesome Icon="Mars" Foreground="#0071B0" />
                                </StackPanel>
                            </Grid>
                            <Grid Margin="0,0,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0">HP</TextBlock>
                                <ProgressBar Grid.Column="1" Foreground="#D64040" Value="50" />
                            </Grid>
                            <Grid Margin="0,0,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0">Energy</TextBlock>
                                <ProgressBar Grid.Column="1" Foreground="#CFB428" Value="50" />
                            </Grid>
                            <Grid Margin="0,0,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" VerticalAlignment="Center">Genetics</TextBlock>
                                <customcontrols:IconButton Grid.Column="1" Icon="Search" Text="Inspect" />
                            </Grid>
                        </StackPanel>
                        <StackPanel>
                            <TextBlock Style="{StaticResource Subtitle}" Margin="0,0,0,10">Species</TextBlock>
                            <Grid Margin="0,0,0,10" ColumnSpacing="6">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image Source="/Assets/fox.png" />
                                <TextBlock Grid.Column="1" Width="Auto" TextTrimming="CharacterEllipsis" TextWrapping="WrapWholeWords" MaxLines="2" ToolTipService.ToolTip="No way" Text="Foxes, or reynards are well known for what actually?">
                                </TextBlock>
                            </Grid>
                            <StackPanel>
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0">Scientific name</TextBlock>
                                    <TextBlock Grid.Column="1">Vulpes vulpes</TextBlock>
                                </Grid>
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0">Age (avg/max)</TextBlock>
                                    <TextBlock Grid.Column="1">12 years/20 years</TextBlock>
                                </Grid>
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0">Breed size</TextBlock>
                                    <TextBlock Grid.Column="1">8-12 children</TextBlock>
                                </Grid>
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0">Diet type</TextBlock>
                                    <TextBlock Grid.Column="1">Omnivore</TextBlock>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Row="1">
                <StackPanel Style="{StaticResource SectionHeading}" Spacing="10">
                    <fa:FontAwesome Icon="Cloud" Foreground="White" />
                    <TextBlock Foreground="White" VerticalAlignment="Center" FontWeight="Bold" FontSize="16">Weather conditions</TextBlock>
                </StackPanel>
                <Grid Padding="20" RowSpacing="20" DataContext="{Binding Simulation.World.Weather}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Spacing="10">
                        <Image Source="/Assets/sun.png" Width="30" VerticalAlignment="Center" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding Humidity, Converter={StaticResource StringFormatter}, ConverterParameter='{}{0} °C'}" />
                    </StackPanel>
                    <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Spacing="10">
                        <Image Source="/Assets/wind.png" Width="30" VerticalAlignment="Center" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding WindSpeed, Converter={StaticResource StringFormatter}, ConverterParameter='{}{0} km/h'}" />
                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Spacing="10">
                        <Image Source="/Assets/water.png" Width="30" VerticalAlignment="Center" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding RainFall, Converter={StaticResource StringFormatter}, ConverterParameter='{}{0} mm/h'}" />
                    </StackPanel>
                </Grid>
            </StackPanel>
            <StackPanel Grid.Row="2">
                <StackPanel Style="{StaticResource SectionHeading}" Spacing="10">
                    <fa:FontAwesome Icon="PlayCircle" Foreground="White" />
                    <TextBlock Foreground="White" VerticalAlignment="Center" FontWeight="Bold" FontSize="16">Simulation</TextBlock>
                </StackPanel>
                <StackPanel Padding="20">
                    <StackPanel Orientation="Horizontal" Spacing="10" Margin="0,0,0,10">
                        <Image Source="/Assets/calendar.png" Width="30" VerticalAlignment="Center" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding Simulation.World.Date, Converter={StaticResource StringFormatter}, ConverterParameter='{}{0:MMMM, d (yyyy)}'}" />
                    </StackPanel>
                    <StackPanel Margin="0,0,0,5">
                        <Grid Margin="0,0,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0">Simulation speed</TextBlock>
                            <StackPanel Grid.Column="1">
                                <TextBlock Text="{Binding Simulation.SimulationSpeed, Converter={StaticResource StringFormatter}, ConverterParameter='{}{0:dd} days/step'}" />
                                <Slider Minimum="1" Maximum="14" Value="{Binding Simulation.SimulationSpeed, Converter={StaticResource TimeSpanToAmountOfDaysConverter}, Mode=TwoWay}" />
                            </StackPanel>
                        </Grid>
                        <Grid Margin="0,0,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0">Score</TextBlock>
                            <TextBlock Grid.Column="1" Text="{Binding Simulation.Score}" />
                        </Grid>
                        <Grid Margin="0,0,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0">Ecosystem</TextBlock>
                            <TextBlock Grid.Column="1" Text="{Binding Simulation.World.Ecosystem.Name}" />
                        </Grid>
                    </StackPanel>
                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal" Spacing="10">
                        <customcontrols:IconButton Grid.Column="1" Icon="Pause" Text="Pause" />
                        <customcontrols:IconButton Grid.Column="1" Icon="SignOut" Text="Quit" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </Grid>


        <!--gene view popup-->
        <Popup Grid.ColumnSpan="2" Grid.RowSpan="3" Grid.Row="0" Grid.Column="0" x:Name="geneticsView" LightDismissOverlayMode="On" IsLightDismissEnabled="True" >
            <Frame Background="{StaticResource PrimaryBackgroundBrush}" BorderBrush="{StaticResource SecondaryBackgroundBrush}" BorderThickness="10" Width="1125" Height="500">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="4*"></ColumnDefinition>
                        <ColumnDefinition Width="0.5*"></ColumnDefinition>
                        <ColumnDefinition Width="5*"></ColumnDefinition>
                        <ColumnDefinition Width="3*"></ColumnDefinition>
                        <ColumnDefinition Width="13*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="3*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <!--Text on the left-->
                    <TextBlock x:Name="animalName" FontSize="{StaticResource FontsizeGenetics}" FontWeight="Bold" Grid.Row="1" Grid.Column="1"> Rattlesnake</TextBlock>
                    <!--text Needs to be bound to the animals species-->
                    <TextBlock x:Name="animalAge" FontSize="{StaticResource FontsizeGenetics}"  Grid.Row="2" Grid.Column="1"> Age: 14 years</TextBlock>
                    <!--text needs to be bound to animals age-->

                    <TextBlock x:Name="animalStats" FontSize="{StaticResource FontsizeGenetics}" FontWeight="Bold" Grid.Row="4" Grid.Column="1"> Statistics</TextBlock>
                    <TextBlock x:Name="statSpeed" FontSize="{StaticResource FontsizeGenetics}" Grid.Row="5" Grid.Column="1"> Speed</TextBlock>
                    <TextBlock x:Name="statWeight" FontSize="{StaticResource FontsizeGenetics}" Grid.Row="6" Grid.Column="1"> Weight</TextBlock>
                    <TextBlock x:Name="statSize" FontSize="{StaticResource FontsizeGenetics}" Grid.Row="7" Grid.Column="1"> Size</TextBlock>
                    <TextBlock x:Name="statAgression" FontSize="{StaticResource FontsizeGenetics}" Grid.Row="8" Grid.Column="1"> Agression</TextBlock>
                    <TextBlock x:Name="statDetectionRange" FontSize="{StaticResource FontsizeGenetics}" Grid.Row="9" Grid.Column="1"> Detection range</TextBlock>
                    <TextBlock x:Name="statResilience" FontSize="{StaticResource FontsizeGenetics}" Grid.Row="10" Grid.Column="1"> Resilience</TextBlock>
                    <TextBlock x:Name="statInteligence" FontSize="{StaticResource FontsizeGenetics}" Grid.Row="11" Grid.Column="1"> Inteligence</TextBlock>
                    <TextBlock x:Name="statSelfDefence" FontSize="{StaticResource FontsizeGenetics}" Grid.Row="12" Grid.Column="1"> Self defence</TextBlock>
                    <TextBlock x:Name="statMetabolicRate" FontSize="{StaticResource FontsizeGenetics}" Grid.Row="13" Grid.Column="1"> Metabolic rate</TextBlock>

                    <!--Progress bars-->
                    <!--LET OP de waardes in de tweede ofset moeten altijd hetzelfde zijn als in de eerste anders krijg je een gradient-->
                    <Rectangle Grid.Row="5" Grid.Column="3" Height="10px" Margin="0, 0, 0, 5" RadiusX="10" RadiusY="15">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                <GradientStop Color="Red" Offset="0.5" x:Name="speedBarColor"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax), color needs to be bound to the collor of the stat-->
                                <GradientStop Color="White" Offset="0.5" x:Name="speedBarEmpty"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax)-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Grid.Row="6" Grid.Column="3" Height="10px" Margin="0, 0, 0, 5" RadiusX="10" RadiusY="15">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                <GradientStop Color="Red" Offset="0.5" x:Name="weightBarColor"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax), color needs to be bound to the collor of the stat-->
                                <GradientStop Color="White" Offset="0.5" x:Name="weightBarEmpty"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax)-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Grid.Row="7" Grid.Column="3" Height="10px" Margin="0, 0, 0, 5" RadiusX="10" RadiusY="15">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                <GradientStop Color="Red" Offset="0.5" x:Name="sizeBarColor"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax), color needs to be bound to the collor of the stat-->
                                <GradientStop Color="White" Offset="0.5" x:Name="sizeBarEmpty"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax)-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Grid.Row="8" Grid.Column="3" Height="10px" Margin="0, 0, 0, 5" RadiusX="10" RadiusY="15">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                <GradientStop Color="Red" Offset="0.5" x:Name="agressionBarColor"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax), color needs to be bound to the collor of the stat-->
                                <GradientStop Color="White" Offset="0.5" x:Name="agressionBarEmpty"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax)-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Grid.Row="9" Grid.Column="3" Height="10px" Margin="0, 0, 0, 5" RadiusX="10" RadiusY="15">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                <GradientStop Color="Red" Offset="0.5" x:Name="DetectionRangeBarColor"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax), color needs to be bound to the collor of the stat-->
                                <GradientStop Color="White" Offset="0.5" x:Name="DetectionRangeBarEmpty"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax)-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Grid.Row="10" Grid.Column="3" Height="10px" Margin="0, 0, 0, 5" RadiusX="10" RadiusY="15">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                <GradientStop Color="Red" Offset="0.5" x:Name="ResilienceBarColor"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax), color needs to be bound to the collor of the stat-->
                                <GradientStop Color="White" Offset="0.5" x:Name="ResilienceBarEmpty"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax)-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Grid.Row="11" Grid.Column="3" Height="10px" Margin="0, 0, 0, 5" RadiusX="10" RadiusY="15">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                <GradientStop Color="Red" Offset="0.5" x:Name="InteligenceBarColor"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax), color needs to be bound to the collor of the stat-->
                                <GradientStop Color="White" Offset="0.5" x:Name="InteligenceBarEmpty"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax)-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Grid.Row="12" Grid.Column="3" Height="10px" Margin="0, 0, 0, 5" RadiusX="10" RadiusY="15">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                <GradientStop Color="Red" Offset="0.5" x:Name="SelfDefenceBarColor"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax), color needs to be bound to the collor of the stat-->
                                <GradientStop Color="White" Offset="0.5" x:Name="SelfDefenceBarEmpty"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax)-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Grid.Row="13" Grid.Column="3" Height="10px" Margin="0, 0, 0, 5" RadiusX="10" RadiusY="15">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
                                <GradientStop Color="Red" Offset="0.5" x:Name="MetabolicRateBarColor"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax), color needs to be bound to the collor of the stat-->
                                <GradientStop Color="White" Offset="0.5" x:Name="MetabolicRateBarEmpty"></GradientStop>
                                <!--ofset needs to be bound to (stat value / statmax)-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>

                    <!--mutationscroller-->
                    <ListView Grid.Column="4" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="15" ScrollViewer.VerticalScrollBarVisibility="Hidden" ItemsSource="{x:Bind mutationsTester}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <ContentPresenter/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Height="1155">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="5*"></RowDefinition>
                                        <RowDefinition Height="5*"></RowDefinition>
                                        <RowDefinition Height="15*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="12*"></ColumnDefinition>
                                        <ColumnDefinition Width="10*"></ColumnDefinition>
                                        <ColumnDefinition Width="5"></ColumnDefinition>
                                        <ColumnDefinition Width="15"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>

                                    <Grid Background="{StaticResource ternaryBackgroundBrush}" Grid.Column="1" Grid.Row="1" Width="320" Height="200">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"></RowDefinition>
                                            <RowDefinition Height="2*"></RowDefinition>
                                            <RowDefinition Height="3*"></RowDefinition>
                                            <RowDefinition Height="1*"></RowDefinition>
                                            <RowDefinition Height="3*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="29*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="1" Grid.Column="1" FontSize="{StaticResource FontsizeGenetics}">
                                            <Run Text="{Binding mutationDate.Day}"></Run><!--Moet gebonden worden op current date - mutationdate-->
                                            <Run Text=" days ago"></Run>
                                        </TextBlock>
                                        <TextBlock Grid.Row="2" Grid.Column="1" FontSize="14" TextWrapping="Wrap" HorizontalAlignment="Left" Width="290">
                                            <Run Text="{Binding type}"></Run>
                                            <Run Text="In gene HTTC, allel"></Run>
                                            <Run Text="{Binding allel}"></Run>
                                            <Run Text=", A > C, protein"></Run>
                                            <Run Text="{Binding proteinBefore}"></Run>
                                            <Run Text="transformed into"></Run>
                                            <Run Text="{Binding proteinAfter}"></Run>
                                        </TextBlock>
                                        <TextBlock Grid.Row="3" Grid.Column="1" FontSize="14">
                                            <Run Text="Resulted in change of:"></Run>
                                        </TextBlock>
                                        <ItemsControl Grid.Row="4" Grid.Column="1" ItemsSource="{Binding affected}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontSize="14">
                                                        <Run Text="    • "></Run>
                                                        <Run Text="{Binding Key}"></Run>
                                                        <Run Text="("></Run>
                                                        <Run Text="{Binding Value.value, Converter={StaticResource intFormat}, ConverterParameter='+0;-#' }"></Run>
                                                        <Run Text=")"></Run>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Grid>
                                    <Image Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="2" Margin="-10" Width="400" Source="../Assets/DNA.png"/>
                                    <Image Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="2" Margin="-10, -780, 0, 0" Width="400" Source="../Assets/DNA.png"/>
                                    <Image Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="2" Margin="-10, 760, 0, 0"  Width="400" Source="../Assets/DNA.png"/>
                                    <Line Grid.Column="2" Grid.Row="1" X1="-1" Y1="100" X2="100" Y2="100" Stroke="Black" StrokeThickness="5"></Line>
                                    <Line Grid.Column="2" Grid.Row="1" X1="100" Y1="100" X2="175" Y2="-5" Stroke="Black" StrokeThickness="5"></Line>

                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Frame>
        </Popup>

        
    </Grid>
</Page>
